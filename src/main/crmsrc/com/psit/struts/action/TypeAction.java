/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.psit.struts.action;

import java.io.IOException;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.DynaActionForm;
import org.apache.struts.actions.DispatchAction;

import com.psit.struts.BIZ.TypeListBIZ;
import com.psit.struts.BIZ.UserBIZ;
import com.psit.struts.entity.LimUser;
import com.psit.struts.entity.TypeList;

/** 
 * 类别管理 <br>
 * create_date: Aug 24, 2010,2:16:55 PM<br>
 */
public class TypeAction extends BaseDispatchAction {
	TypeListBIZ typeListBiz = null;
	UserBIZ userBiz = null;

	/**
	 * 判断用户是否有类别管理操作的权限 <br>
	 * create_date: Aug 6, 2010,11:40:32 AM <br>
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward 有权限继续执行原有方法，没有权限跳转到limError页面
	 * @throws Exception
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		if (isLimitAllow(request)) {
			return super.execute(mapping, form, request, response);
		} else {
			return mapping.findForward("limError");
		}
	}

	/**
	 * 检测用户是否有类别管理的操作的权限码 <br>
	 * create_date: Aug 6, 2010,11:40:32 AM <br>
	 * @param request
	 * @return boolean 有相应的权限码返回true，没有返回false<br>
	 */
	protected boolean isLimitAllow(HttpServletRequest request) {
		String methodName = request.getParameter("op");
		String methLim[][] = { { "findTypeList", "asy014" },//类别是否可见
				{ "addType", "sy012" },//添加类别
				{ "modifyType", "sy013" },//修改类别
		};
		LimUser limUser=(LimUser)request.getSession().getAttribute("limUser");
		return userBiz.getLimit(limUser, methodName, methLim);
	}

	/**
	 * 查询类别 <br>
	 * create_date: Aug 24, 2010,2:18:43 PM
	 * @param mapping
	 * @param form
	 * @param request
	 *      parameter > typType:各种类型类别的标识 isInsert:是否可以插入类别 isEdit:是否可以修改类别 
	 *                  msg:标识页面修改成功提示是否显示如果值为1则显示 isLock:是否锁定类别
	 * @param response
	 * @return ActionForward 跳转到showTypeList页面<br>
	 * 		attribute > typType:各种类型类别的标识 isInsert:是否可以插入类别 isEdit:是否可以修改类别 
	 *                  msg:标识页面修改成功提示是否显示如果值为1则显示 isLock:是否锁定类别
	 */
	public ActionForward findTypeList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String typType = request.getParameter("typType");

		String isInsert = request.getParameter("isInsert");//是否可以插入
		String isEdit = request.getParameter("isEdit");//是否可以修改
		String isLock = request.getParameter("isLock");//是否锁定

		//默认值
		if (isInsert == null || isInsert.equals("")) {
			isInsert = "1";
		}
		if (isEdit == null || isEdit.equals("")) {
			isEdit = "1";
		}
		if (isLock == null || isLock.equals("")) {
			isLock = "0";
		}
		String msg = request.getParameter("msg");
		List list = typeListBiz.findAll(typType);
		Iterator it = list.iterator();
		while (it.hasNext()) {
			TypeList typeList = (TypeList) it.next();
			if (typeList.getTypIsenabled().equals("1")) {
				typeList.setEnabledType("checked");
			}
		}
		if (msg != null) {
			request.setAttribute("msg", msg);
		}
		request.setAttribute("typType", typType);
		request.setAttribute("typeList", list);

		request.setAttribute("isInsert", isInsert);
		request.setAttribute("isEdit", isEdit);
		request.setAttribute("isLock", isLock);

		return mapping.findForward("showTypeList");
	}

	/**
	 * 新建类别 <br>
	 * create_date: Aug 24, 2010,2:30:03 PM
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward 跳转到popDivSuc页面<br>
	 * 		attribute > msg:添加类别成功信息提示
	 */
	public ActionForward addType(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DynaActionForm form1 = (DynaActionForm) form;
		TypeList typeList = (TypeList) form1.get("typeList");
		typeListBiz.save(typeList);
		request.setAttribute("msg", "添加类别");
		return mapping.findForward("popDivSuc");
	}

	/**
	 * 修改类别 <br>
	 * create_date: Aug 24, 2010,2:30:58 PM
	 * @param mapping
	 * @param form
	 * @param request
	 *      parameter > typType:各种类型类别的标识 isInsert:是否可以插入类别 isEdit:是否可以修改类别 isLock:是否锁定类别
	 *                  typeId:要修改的类别ID数组 typeName:要修改的类别名称数组 enabledType:被选择启用的类别ID数组
	 * @param response
	 * @return ActionForward 重定向到 "typeAction.do?op=findTypeList&typType=" + typType
				+ "&msg=1&isInsert=" + isInsert + "&isEdit=" + isEdit
				+ "&isLock=" + isLock<br>
	 */
	public ActionForward modifyType(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String typType = request.getParameter("typType");
		String[] typeIds = request.getParameterValues("typeId");
		String[] typeNames = request.getParameterValues("typeName");
		String[] enabledIds = request.getParameterValues("enabledType");

		String isInsert = request.getParameter("isInsert");//是否可以插入
		String isEdit = request.getParameter("isEdit");//是否可以修改
		String isLock = request.getParameter("isLock");//是否锁定

		typeListBiz.modType("TypeList", "typ", typeNames, typeIds, enabledIds,
				typType);

		String url = "typeAction.do?op=findTypeList&typType=" + typType
				+ "&msg=1&isInsert=" + isInsert + "&isEdit=" + isEdit
				+ "&isLock=" + isLock;
		try {
			response.sendRedirect(url);
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}

	/**
	 * 注入typeListBiz <br>
	 * create_date: Aug 9, 2010,1:49:23 PM
	 * @param typeListBiz 
	 */
	public void setTypeListBiz(TypeListBIZ typeListBiz) {
		this.typeListBiz = typeListBiz;
	}

	/**
	 * 注入userBiz <br>
	 * create_date: Aug 9, 2010,1:49:23 PM
	 * @param userBiz 
	 */
	public void setUserBiz(UserBIZ userBiz) {
		this.userBiz = userBiz;
	}
}